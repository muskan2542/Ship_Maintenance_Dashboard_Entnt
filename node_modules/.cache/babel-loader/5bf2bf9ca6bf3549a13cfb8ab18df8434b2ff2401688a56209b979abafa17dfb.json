{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\components\\\\Dashboard\\\\Charts.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import {\n//     BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n//     PieChart, Pie, Cell, Legend\n// } from 'recharts';\n\n// const Charts = () => {\n//     const [jobs, setJobs] = useState([]);\n\n//     useEffect(() => {\n//         const appData = JSON.parse(localStorage.getItem('appData'));\n//         const jobData = appData?.jobs || [\n//             { id: \"j1\", componentId: \"c1\", shipId: \"s1\", type: \"Inspection\", priority: \"High\", status: \"Open\", assignedEngineerId: \"3\", scheduledDate: \"2025-05-05\" },\n//             { id: \"j2\", componentId: \"c2\", shipId: \"s2\", type: \"Maintenance\", priority: \"Medium\", status: \"Closed\", assignedEngineerId: \"2\", scheduledDate: \"2025-05-10\" },\n//             { id: \"j3\", componentId: \"c1\", shipId: \"s1\", type: \"Repair\", priority: \"High\", status: \"In Progress\", assignedEngineerId: \"1\", scheduledDate: \"2025-05-15\" }\n//         ];\n//         setJobs(jobData);\n//     }, []);\n\n//     const statusCount = jobs.reduce((acc, job) => {\n//         acc[job.status] = (acc[job.status] || 0) + 1;\n//         return acc;\n//     }, {});\n\n//     const statusData = Object.entries(statusCount).map(([status, count]) => ({\n//         name: status,\n//         value: count\n//     }));\n\n//     const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\n\n//     return (\n//         <div className=\"charts-container\">\n//             <div className=\"chart-wrapper\">\n//                 <h3>Jobs by Status (Pie)</h3>\n//                 <ResponsiveContainer width=\"100%\" height={300}>\n//                     <PieChart>\n//                         <Pie\n//                             dataKey=\"value\"\n//                             isAnimationActive={false}\n//                             data={statusData}\n//                             cx=\"50%\"\n//                             cy=\"50%\"\n//                             outerRadius={80}\n//                             label\n//                         >\n//                             {statusData.map((entry, index) => (\n//                                 <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//                             ))}\n//                         </Pie>\n//                         <Tooltip />\n//                         <Legend />\n//                     </PieChart>\n//                 </ResponsiveContainer>\n//             </div>\n\n//             <div className=\"chart-wrapper\">\n//                 <h3>Jobs by Status (Bar)</h3>\n//                 <ResponsiveContainer width=\"100%\" height={300}>\n//                     <BarChart data={statusData} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\n//                         <CartesianGrid strokeDasharray=\"3 3\" />\n//                         <XAxis dataKey=\"name\" />\n//                         <YAxis />\n//                         <Tooltip />\n//                         <Legend />\n//                         <Bar dataKey=\"value\" fill=\"#8884d8\" />\n//                     </BarChart>\n//                 </ResponsiveContainer>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Charts;\n\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const jobsData = JSON.parse(localStorage.getItem('jobs')) || [];\n    setJobs(jobsData);\n  }, []);\n  const statusCount = jobs.reduce((acc, job) => {\n    acc[job.status] = (acc[job.status] || 0) + 1;\n    return acc;\n  }, {});\n  const statusData = Object.entries(statusCount).map(([status, count]) => ({\n    name: status,\n    value: count\n  }));\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Jobs by Status (Pie)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            dataKey: \"value\",\n            isAnimationActive: false,\n            data: statusData,\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            label: true,\n            children: statusData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Jobs by Status (Bar)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Charts, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","Charts","_s","jobs","setJobs","jobsData","JSON","parse","localStorage","getItem","statusCount","reduce","acc","job","status","statusData","Object","entries","map","count","name","value","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","isAnimationActive","data","cx","cy","outerRadius","label","entry","index","fill","length","margin","top","right","left","bottom","strokeDasharray","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/components/Dashboard/Charts.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//     BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n//     PieChart, Pie, Cell, Legend\r\n// } from 'recharts';\r\n\r\n// const Charts = () => {\r\n//     const [jobs, setJobs] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const appData = JSON.parse(localStorage.getItem('appData'));\r\n//         const jobData = appData?.jobs || [\r\n//             { id: \"j1\", componentId: \"c1\", shipId: \"s1\", type: \"Inspection\", priority: \"High\", status: \"Open\", assignedEngineerId: \"3\", scheduledDate: \"2025-05-05\" },\r\n//             { id: \"j2\", componentId: \"c2\", shipId: \"s2\", type: \"Maintenance\", priority: \"Medium\", status: \"Closed\", assignedEngineerId: \"2\", scheduledDate: \"2025-05-10\" },\r\n//             { id: \"j3\", componentId: \"c1\", shipId: \"s1\", type: \"Repair\", priority: \"High\", status: \"In Progress\", assignedEngineerId: \"1\", scheduledDate: \"2025-05-15\" }\r\n//         ];\r\n//         setJobs(jobData);\r\n//     }, []);\r\n\r\n//     const statusCount = jobs.reduce((acc, job) => {\r\n//         acc[job.status] = (acc[job.status] || 0) + 1;\r\n//         return acc;\r\n//     }, {});\r\n\r\n//     const statusData = Object.entries(statusCount).map(([status, count]) => ({\r\n//         name: status,\r\n//         value: count\r\n//     }));\r\n\r\n//     const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\r\n\r\n//     return (\r\n//         <div className=\"charts-container\">\r\n//             <div className=\"chart-wrapper\">\r\n//                 <h3>Jobs by Status (Pie)</h3>\r\n//                 <ResponsiveContainer width=\"100%\" height={300}>\r\n//                     <PieChart>\r\n//                         <Pie\r\n//                             dataKey=\"value\"\r\n//                             isAnimationActive={false}\r\n//                             data={statusData}\r\n//                             cx=\"50%\"\r\n//                             cy=\"50%\"\r\n//                             outerRadius={80}\r\n//                             label\r\n//                         >\r\n//                             {statusData.map((entry, index) => (\r\n//                                 <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n//                             ))}\r\n//                         </Pie>\r\n//                         <Tooltip />\r\n//                         <Legend />\r\n//                     </PieChart>\r\n//                 </ResponsiveContainer>\r\n//             </div>\r\n\r\n//             <div className=\"chart-wrapper\">\r\n//                 <h3>Jobs by Status (Bar)</h3>\r\n//                 <ResponsiveContainer width=\"100%\" height={300}>\r\n//                     <BarChart data={statusData} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n//                         <CartesianGrid strokeDasharray=\"3 3\" />\r\n//                         <XAxis dataKey=\"name\" />\r\n//                         <YAxis />\r\n//                         <Tooltip />\r\n//                         <Legend />\r\n//                         <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n//                     </BarChart>\r\n//                 </ResponsiveContainer>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Charts;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n    PieChart, Pie, Cell, Legend\r\n} from 'recharts';\r\n\r\nconst Charts = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const jobsData = JSON.parse(localStorage.getItem('jobs')) || [];\r\n        setJobs(jobsData);\r\n    }, []);\r\n\r\n    const statusCount = jobs.reduce((acc, job) => {\r\n        acc[job.status] = (acc[job.status] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const statusData = Object.entries(statusCount).map(([status, count]) => ({\r\n        name: status,\r\n        value: count\r\n    }));\r\n\r\n    const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\r\n\r\n    return (\r\n        <div className=\"charts-container\">\r\n            <div className=\"chart-wrapper\">\r\n                <h3>Jobs by Status (Pie)</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            dataKey=\"value\"\r\n                            isAnimationActive={false}\r\n                            data={statusData}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            outerRadius={80}\r\n                            label\r\n                        >\r\n                            {statusData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                            ))}\r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-wrapper\">\r\n                <h3>Jobs by Status (Bar)</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart data={statusData} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}