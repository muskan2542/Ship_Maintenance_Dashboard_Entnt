{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\components\\\\Jobs\\\\JobCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobCalendar = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [jobsForDate, setJobsForDate] = useState([]);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('jobs')) || [];\n    setJobs(data);\n  }, []);\n  const handleDateChange = e => {\n    const date = e.target.value;\n    setSelectedDate(date);\n    const filtered = jobs.filter(job => job.scheduledDate === date);\n    setJobsForDate(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Maintenance Job Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate,\n      onChange: handleDateChange,\n      style: {\n        marginBottom: '1rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Jobs scheduled for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), jobsForDate.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No jobs scheduled for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: jobsForDate.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: job.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this), \" | Ship: \", job.shipId, \" | Component: \", job.componentId, \" | Priority: \", job.priority, \" | Status: \", job.status]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(JobCalendar, \"r4zJzLiOX4kx+t3IxNYdEabpwaM=\");\n_c = JobCalendar;\nexport default JobCalendar;\nvar _c;\n$RefreshReg$(_c, \"JobCalendar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","JobCalendar","_s","jobs","setJobs","selectedDate","setSelectedDate","jobsForDate","setJobsForDate","data","JSON","parse","localStorage","getItem","handleDateChange","e","date","target","value","filtered","filter","job","scheduledDate","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","marginBottom","length","map","shipId","componentId","priority","status","id","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/components/Jobs/JobCalendar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst JobCalendar = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [jobsForDate, setJobsForDate] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('jobs')) || [];\r\n        setJobs(data);\r\n    }, []);\r\n\r\n    const handleDateChange = (e) => {\r\n        const date = e.target.value;\r\n        setSelectedDate(date);\r\n        const filtered = jobs.filter(job => job.scheduledDate === date);\r\n        setJobsForDate(filtered);\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '2rem' }}>\r\n            <h2>Maintenance Job Calendar</h2>\r\n            <input\r\n                type=\"date\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                style={{ marginBottom: '1rem', padding: '0.5rem' }}\r\n            />\r\n\r\n            {selectedDate && (\r\n                <>\r\n                    <h3>Jobs scheduled for {selectedDate}</h3>\r\n                    {jobsForDate.length === 0 ? (\r\n                        <p>No jobs scheduled for this date.</p>\r\n                    ) : (\r\n                        <ul>\r\n                            {jobsForDate.map((job) => (\r\n                                <li key={job.id}>\r\n                                    <strong>{job.type}</strong> | Ship: {job.shipId} | Component: {job.componentId} | Priority: {job.priority} | Status: {job.status}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMc,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAC3DT,OAAO,CAACK,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BZ,eAAe,CAACU,IAAI,CAAC;IACrB,MAAMG,QAAQ,GAAGhB,IAAI,CAACiB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,aAAa,KAAKN,IAAI,CAAC;IAC/DR,cAAc,CAACW,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACIrB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B3B,OAAA;MAAA2B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC/B,OAAA;MACIgC,IAAI,EAAC,MAAM;MACXZ,KAAK,EAAEb,YAAa;MACpB0B,QAAQ,EAAEjB,gBAAiB;MAC3BS,KAAK,EAAE;QAAES,YAAY,EAAE,MAAM;QAAER,OAAO,EAAE;MAAS;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EAEDxB,YAAY,iBACTP,OAAA,CAAAE,SAAA;MAAAyB,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,GAAI,qBAAmB,EAACpB,YAAY;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACzCtB,WAAW,CAAC0B,MAAM,KAAK,CAAC,gBACrBnC,OAAA;QAAA2B,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEvC/B,OAAA;QAAA2B,QAAA,EACKlB,WAAW,CAAC2B,GAAG,CAAEb,GAAG,iBACjBvB,OAAA;UAAA2B,QAAA,gBACI3B,OAAA;YAAA2B,QAAA,EAASJ,GAAG,CAACS;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,aAAS,EAACR,GAAG,CAACc,MAAM,EAAC,gBAAc,EAACd,GAAG,CAACe,WAAW,EAAC,eAAa,EAACf,GAAG,CAACgB,QAAQ,EAAC,aAAW,EAAChB,GAAG,CAACiB,MAAM;QAAA,GAD3HjB,GAAG,CAACkB,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP;IAAA,eACH,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA7CID,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}