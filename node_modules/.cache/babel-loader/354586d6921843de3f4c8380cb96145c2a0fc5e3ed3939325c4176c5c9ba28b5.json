{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\pages\\\\JobsPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/JobsPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport JobList from '../components/Jobs/JobList';\nimport JobForm from '../components/Jobs/JobForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [editingJob, setEditingJob] = useState(null);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('jobs')) || [];\n    setJobs(data);\n  }, []);\n  const saveJobs = updatedJobs => {\n    localStorage.setItem('jobs', JSON.stringify(updatedJobs));\n    setJobs(updatedJobs);\n  };\n  const handleSave = job => {\n    let updatedJobs;\n    if (job.id) {\n      updatedJobs = jobs.map(j => j.id === job.id ? job : j);\n    } else {\n      job.id = Date.now().toString();\n      updatedJobs = [...jobs, job];\n    }\n    saveJobs(updatedJobs);\n    setEditingJob(null);\n  };\n  const handleDelete = id => {\n    const updated = jobs.filter(j => j.id !== id);\n    saveJobs(updated);\n  };\n  const handleEdit = job => {\n    setEditingJob(job);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(JobForm, {\n      onSave: handleSave,\n      editingJob: editingJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobList, {\n      jobs: jobs,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(JobsPage, \"c7Ex+3r7d9AfsC4lB2vG11VmC50=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useEffect","useState","JobList","JobForm","jsxDEV","_jsxDEV","JobsPage","_s","jobs","setJobs","editingJob","setEditingJob","data","JSON","parse","localStorage","getItem","saveJobs","updatedJobs","setItem","stringify","handleSave","job","id","map","j","Date","now","toString","handleDelete","updated","filter","handleEdit","style","padding","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/pages/JobsPage.jsx"],"sourcesContent":["// src/pages/JobsPage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport JobList from '../components/Jobs/JobList';\r\nimport JobForm from '../components/Jobs/JobForm';\r\n\r\nconst JobsPage = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [editingJob, setEditingJob] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('jobs')) || [];\r\n        setJobs(data);\r\n    }, []);\r\n\r\n    const saveJobs = (updatedJobs) => {\r\n        localStorage.setItem('jobs', JSON.stringify(updatedJobs));\r\n        setJobs(updatedJobs);\r\n    };\r\n\r\n    const handleSave = (job) => {\r\n        let updatedJobs;\r\n        if (job.id) {\r\n            updatedJobs = jobs.map(j => (j.id === job.id ? job : j));\r\n        } else {\r\n            job.id = Date.now().toString();\r\n            updatedJobs = [...jobs, job];\r\n        }\r\n        saveJobs(updatedJobs);\r\n        setEditingJob(null);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        const updated = jobs.filter(j => j.id !== id);\r\n        saveJobs(updated);\r\n    };\r\n\r\n    const handleEdit = (job) => {\r\n        setEditingJob(job);\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '2rem' }}>\r\n            <JobForm onSave={handleSave} editingJob={editingJob} />\r\n            <hr />\r\n            <JobList jobs={jobs} onEdit={handleEdit} onDelete={handleDelete} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobsPage;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,OAAO,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAC3DP,OAAO,CAACG,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,QAAQ,GAAIC,WAAW,IAAK;IAC9BH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,WAAW,CAAC,CAAC;IACzDT,OAAO,CAACS,WAAW,CAAC;EACxB,CAAC;EAED,MAAMG,UAAU,GAAIC,GAAG,IAAK;IACxB,IAAIJ,WAAW;IACf,IAAII,GAAG,CAACC,EAAE,EAAE;MACRL,WAAW,GAAGV,IAAI,CAACgB,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKD,GAAG,CAACC,EAAE,GAAGD,GAAG,GAAGG,CAAE,CAAC;IAC5D,CAAC,MAAM;MACHH,GAAG,CAACC,EAAE,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC9BV,WAAW,GAAG,CAAC,GAAGV,IAAI,EAAEc,GAAG,CAAC;IAChC;IACAL,QAAQ,CAACC,WAAW,CAAC;IACrBP,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMkB,YAAY,GAAIN,EAAE,IAAK;IACzB,MAAMO,OAAO,GAAGtB,IAAI,CAACuB,MAAM,CAACN,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC7CN,QAAQ,CAACa,OAAO,CAAC;EACrB,CAAC;EAED,MAAME,UAAU,GAAIV,GAAG,IAAK;IACxBX,aAAa,CAACW,GAAG,CAAC;EACtB,CAAC;EAED,oBACIjB,OAAA;IAAK4B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B9B,OAAA,CAACF,OAAO;MAACiC,MAAM,EAAEf,UAAW;MAACX,UAAU,EAAEA;IAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnC,OAAA,CAACH,OAAO;MAACM,IAAI,EAAEA,IAAK;MAACiC,MAAM,EAAET,UAAW;MAACU,QAAQ,EAAEb;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd,CAAC;AAACjC,EAAA,CA1CID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}