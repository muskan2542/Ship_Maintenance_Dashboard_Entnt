{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Disable auto-login by NOT loading session from localStorage on app start\n  useEffect(() => {\n    // Commented out to prevent auto-login\n    // const session = localStorage.getItem('session');\n    // if (session) {\n    //   setUser(JSON.parse(session));\n    // }\n\n    // Explicitly set user null on load to force login\n    setUser(null);\n  }, []);\n  const login = (email, password) => {\n    // Mocked users (or load from localStorage if you want)\n    const users = [{\n      id: '1',\n      role: 'Admin',\n      email: 'admin@entnt.in',\n      password: 'admin123'\n    }, {\n      id: '2',\n      role: 'Inspector',\n      email: 'inspector@entnt.in',\n      password: 'inspect123'\n    }, {\n      id: '3',\n      role: 'Engineer',\n      email: 'engineer@entnt.in',\n      password: 'engine123'\n    }];\n    const foundUser = users.find(u => u.email === email && u.password === password);\n    if (foundUser) {\n      localStorage.setItem('session', JSON.stringify(foundUser));\n      setUser(foundUser);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('session');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","users","id","role","foundUser","find","u","localStorage","setItem","JSON","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create context\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Disable auto-login by NOT loading session from localStorage on app start\n  useEffect(() => {\n    // Commented out to prevent auto-login\n    // const session = localStorage.getItem('session');\n    // if (session) {\n    //   setUser(JSON.parse(session));\n    // }\n\n    // Explicitly set user null on load to force login\n    setUser(null);\n  }, []);\n\n  const login = (email, password) => {\n    // Mocked users (or load from localStorage if you want)\n    const users = [\n      { id: '1', role: 'Admin', email: 'admin@entnt.in', password: 'admin123' },\n      { id: '2', role: 'Inspector', email: 'inspector@entnt.in', password: 'inspect123' },\n      { id: '3', role: 'Engineer', email: 'engineer@entnt.in', password: 'engine123' }\n    ];\n\n    const foundUser = users.find(\n      (u) => u.email === email && u.password === password\n    );\n\n    if (foundUser) {\n      localStorage.setItem('session', JSON.stringify(foundUser));\n      setUser(foundUser);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('session');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;;IAEA;IACAQ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,MAAMC,KAAK,GAAG,CACZ;MAAEC,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,OAAO;MAAEJ,KAAK,EAAE,gBAAgB;MAAEC,QAAQ,EAAE;IAAW,CAAC,EACzE;MAAEE,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,WAAW;MAAEJ,KAAK,EAAE,oBAAoB;MAAEC,QAAQ,EAAE;IAAa,CAAC,EACnF;MAAEE,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,UAAU;MAAEJ,KAAK,EAAE,mBAAmB;MAAEC,QAAQ,EAAE;IAAY,CAAC,CACjF;IAED,MAAMI,SAAS,GAAGH,KAAK,CAACI,IAAI,CACzBC,CAAC,IAAKA,CAAC,CAACP,KAAK,KAAKA,KAAK,IAAIO,CAAC,CAACN,QAAQ,KAAKA,QAC7C,CAAC;IAED,IAAII,SAAS,EAAE;MACbG,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS,CAAC,CAAC;MAC1DP,OAAO,CAACO,SAAS,CAAC;MAClB,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnBJ,YAAY,CAACK,UAAU,CAAC,SAAS,CAAC;IAClCf,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEE,KAAK;MAAEa;IAAO,CAAE;IAAAjB,QAAA,EAClDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA9CWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}