{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Hardcoded users data — this MUST be inside AuthContext.jsx\nconst users = [{\n  id: '1',\n  role: 'Admin',\n  email: 'admin@entnt.in',\n  password: 'admin123'\n}, {\n  id: '2',\n  role: 'Inspector',\n  email: 'inspector@entnt.in',\n  password: 'inspect123'\n}, {\n  id: '3',\n  role: 'Engineer',\n  email: 'engineer@entnt.in',\n  password: 'engine123'\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) setUser(JSON.parse(storedUser));\n  }, []);\n  const login = (email, password) => {\n    const matchedUser = users.find(u => u.email === email && u.password === password);\n    if (matchedUser) {\n      setUser(matchedUser);\n      localStorage.setItem('user', JSON.stringify(matchedUser));\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","users","id","role","email","password","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","matchedUser","find","u","setItem","stringify","alert","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\n// Hardcoded users data — this MUST be inside AuthContext.jsx\nconst users = [\n  { id: '1', role: 'Admin', email: 'admin@entnt.in', password: 'admin123' },\n  { id: '2', role: 'Inspector', email: 'inspector@entnt.in', password: 'inspect123' },\n  { id: '3', role: 'Engineer', email: 'engineer@entnt.in', password: 'engine123' }\n];\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) setUser(JSON.parse(storedUser));\n  }, []);\n\n  const login = (email, password) => {\n    const matchedUser = users.find((u) => u.email === email && u.password === password);\n    if (matchedUser) {\n      setUser(matchedUser);\n      localStorage.setItem('user', JSON.stringify(matchedUser));\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,MAAMM,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,QAAQ,EAAE;AAAW,CAAC,EACzE;EAAEH,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,QAAQ,EAAE;AAAa,CAAC,EACnF;EAAEH,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,mBAAmB;EAAEC,QAAQ,EAAE;AAAY,CAAC,CACjF;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAED,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAGA,CAACZ,KAAK,EAAEC,QAAQ,KAAK;IACjC,MAAMY,WAAW,GAAGhB,KAAK,CAACiB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACf,KAAK,KAAKA,KAAK,IAAIe,CAAC,CAACd,QAAQ,KAAKA,QAAQ,CAAC;IACnF,IAAIY,WAAW,EAAE;MACfP,OAAO,CAACO,WAAW,CAAC;MACpBL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACJ,WAAW,CAAC,CAAC;IAC3D,CAAC,MAAM;MACLK,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEO,KAAK;MAAEO;IAAO,CAAE;IAAAhB,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CA5BWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}