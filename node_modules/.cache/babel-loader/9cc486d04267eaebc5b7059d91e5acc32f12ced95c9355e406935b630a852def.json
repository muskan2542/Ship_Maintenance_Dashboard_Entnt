{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ShipMaintenanceDashboard\\\\src\\\\components\\\\Dashboard\\\\Charts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const appData = JSON.parse(localStorage.getItem('appData'));\n    const jobData = (appData === null || appData === void 0 ? void 0 : appData.jobs) || [{\n      id: \"j1\",\n      componentId: \"c1\",\n      shipId: \"s1\",\n      type: \"Inspection\",\n      priority: \"High\",\n      status: \"Open\",\n      assignedEngineerId: \"3\",\n      scheduledDate: \"2025-05-05\"\n    }, {\n      id: \"j2\",\n      componentId: \"c2\",\n      shipId: \"s2\",\n      type: \"Maintenance\",\n      priority: \"Medium\",\n      status: \"Closed\",\n      assignedEngineerId: \"2\",\n      scheduledDate: \"2025-05-10\"\n    }, {\n      id: \"j3\",\n      componentId: \"c1\",\n      shipId: \"s1\",\n      type: \"Repair\",\n      priority: \"High\",\n      status: \"In Progress\",\n      assignedEngineerId: \"1\",\n      scheduledDate: \"2025-05-15\"\n    }];\n    setJobs(jobData);\n  }, []);\n  const statusCount = jobs.reduce((acc, job) => {\n    acc[job.status] = (acc[job.status] || 0) + 1;\n    return acc;\n  }, {});\n  const statusData = Object.entries(statusCount).map(([status, count]) => ({\n    name: status,\n    value: count\n  }));\n  const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Jobs by Status (Pie)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            dataKey: \"value\",\n            isAnimationActive: false,\n            data: statusData,\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            label: true,\n            children: statusData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Jobs by Status (Bar)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Charts, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","Charts","_s","jobs","setJobs","appData","JSON","parse","localStorage","getItem","jobData","id","componentId","shipId","type","priority","status","assignedEngineerId","scheduledDate","statusCount","reduce","acc","job","statusData","Object","entries","map","count","name","value","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","isAnimationActive","data","cx","cy","outerRadius","label","entry","index","fill","length","margin","top","right","left","bottom","strokeDasharray","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ShipMaintenanceDashboard/src/components/Dashboard/Charts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n    PieChart, Pie, Cell, Legend\r\n} from 'recharts';\r\n\r\nconst Charts = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const appData = JSON.parse(localStorage.getItem('appData'));\r\n        const jobData = appData?.jobs || [\r\n            { id: \"j1\", componentId: \"c1\", shipId: \"s1\", type: \"Inspection\", priority: \"High\", status: \"Open\", assignedEngineerId: \"3\", scheduledDate: \"2025-05-05\" },\r\n            { id: \"j2\", componentId: \"c2\", shipId: \"s2\", type: \"Maintenance\", priority: \"Medium\", status: \"Closed\", assignedEngineerId: \"2\", scheduledDate: \"2025-05-10\" },\r\n            { id: \"j3\", componentId: \"c1\", shipId: \"s1\", type: \"Repair\", priority: \"High\", status: \"In Progress\", assignedEngineerId: \"1\", scheduledDate: \"2025-05-15\" }\r\n        ];\r\n        setJobs(jobData);\r\n    }, []);\r\n\r\n    const statusCount = jobs.reduce((acc, job) => {\r\n        acc[job.status] = (acc[job.status] || 0) + 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    const statusData = Object.entries(statusCount).map(([status, count]) => ({\r\n        name: status,\r\n        value: count\r\n    }));\r\n\r\n    const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50'];\r\n\r\n    return (\r\n        <div className=\"charts-container\">\r\n            <div className=\"chart-wrapper\">\r\n                <h3>Jobs by Status (Pie)</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            dataKey=\"value\"\r\n                            isAnimationActive={false}\r\n                            data={statusData}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            outerRadius={80}\r\n                            label\r\n                        >\r\n                            {statusData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                            ))}\r\n                        </Pie>\r\n                        <Tooltip />\r\n                        <Legend />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-wrapper\">\r\n                <h3>Jobs by Status (Bar)</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart data={statusData} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}